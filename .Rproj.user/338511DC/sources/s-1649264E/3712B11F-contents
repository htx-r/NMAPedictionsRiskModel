#########################################################################################
################ Script for testing first the NMA with IPDs and AD ######################
#########################################################################################



## First you have to run all the Master file
### Run lines 1 to 90 (instead of lines: 63-70: Bootstrap calibration and discrimination)
### You don't need IPDNMR

modelIPDADNMA<-function(){

  #############Part I: model for IPD data
  for (i in 1:Np){
    outcome[i]~dbern(p[i])
    ###formula
    logit(p[i])<-u[studyid[i]] + d[studyid[i], arm[i]]
  }

  #####treatment effects - fixed across studies & correction for multi-arm studies
  for(i in 1:N.IPD.studies){
    d[i,1] <- 0
    w[i,1] <- 0

    for(k in 2:na[i]){
      d[i,k]<-md[i, k]
      md[i, k] <- mean[i, k] + sw[i, k]
      w[i, k] <- (d[i, k] - mean[i, k])
      sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
      mean[i, k] <- delta[treat[i, k]] - delta[treat[i, 1]]

    }

  }

  ##Part II: Model for AD data


  for(i in (N.IPD.studies+1):(N.AD.studies +N.IPD.studies)){
    d[i,treat[i,1] ]<- 0
    w[i,1] <- 0
    ### formula for study's reference
    logit(pa[i, treat[i,1] ])<-u[i]

    for (k in 1:na[i]){
      ##likelihood
      outcome.ad[i,treat[i,k]]~dbin(pa[i,treat[i,k]], n[i,treat[i,k]])
    }
    for(k in 2:na[i]){
      ### formula - fixed across studies
      logit(pa[i, treat[i,k] ])<-u[i] + d[i, treat[i,k]]

      d[i, treat[i,k]]<-md.ad [i, treat[i,k]]
      md.ad[i, treat[i,k]]<- mean[i, k] + sw[i, k]
      w[i, k] <- (d[i, treat[i, k]] - mean[i, k])
      sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
      mean[i, k] <- delta[treat[i, k]] - delta[treat[i, 1]]


    }
  }

  ####PART III: Model for combining all treatment effect estimates
  #Vague priors

  ##independent ui for each study
  for (i in 1:(N.IPD.studies+N.AD.studies)){
    u[i]~dnorm(0,0.001)
  }

  delta[ref]<-0

  for(k in 1:(ref-1)){
    delta[k]~dnorm(0,0.001)

  }
  for(k in (ref+1):nt){
    delta[k]~dnorm(0,0.001)

  }



  ###Calculation of ORs
  for(j in 1:nt){ORref[j]<- exp(delta[j] - delta[ref])}

}





#### Aggregated data
MS <- read_excel("C:/Users/kc19o338/articles/TracemereADMS/MS replication/MS.xlsx")
MS <- as.data.frame(MS)

ADdata<-MS[which(MS$study=="Bornstein" | MS$study=="Johnson"),]


######DATA
## arm column
RiskData$arm<-NA
RiskData$arm[RiskData$STUDYID==1 & RiskData$TRT01A==1]<-1
RiskData$arm[RiskData$STUDYID==1 & RiskData$TRT01A==4]<-2
RiskData$arm[RiskData$STUDYID==2 & RiskData$TRT01A==1]<-1
RiskData$arm[RiskData$STUDYID==2 & RiskData$TRT01A==2]<-2
RiskData$arm[RiskData$STUDYID==2 & RiskData$TRT01A==4]<-3
RiskData$arm[RiskData$STUDYID==3 & RiskData$TRT01A==3]<-1
RiskData$arm[RiskData$STUDYID==3 & RiskData$TRT01A==4]<-2

ADdata$treat[which(ADdata$treat=="Placebo")]<-4
ADdata$treat[which(ADdata$treat=="Glatiramer acetate")]<-2
ADdata$id<-c(4,4,5,5)

jagsdataIPDADnetmeta <- list(
  N.IPD.studies=3,
  Np=sum(as.numeric(table(as.numeric(as.factor(RiskData$STUDYID))))),
  studyid=as.numeric(as.factor(RiskData$STUDYID)),
  outcome=as.numeric(RiskData$RELAPSE2year)-1,
  treat= rbind(c(1,4,NA),c(1,2,4),c(3,4,NA), c(2,4,NA),c(2,4,NA)),
  na=c(2,3,2,2,2),
  arm=RiskData$arm,
  ref=4,
  nt=4,
  N.AD.studies=2,
  outcome.ad=rbind(c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,11,NA,19),c(NA,89,NA,97)),
  n=rbind(c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,25,NA,25),c(NA,125,NA,126)),
  Risk=RiskData$logitRiskFabio

)

####RUN the model
IPDADnetmetaJAGSmodel <- jags.parallel(data = jagsdataIPDADnetmeta ,inits=NULL,parameters.to.save = c('delta','u','ORref'),model.file = modelIPDADNMA,
                                       n.chains=2,n.iter = 10000,n.burnin = 100,DIC=F,n.thin = 1)

traceplot(IPDADnetmetaJAGSmodel)
IPDADnetmetaJAGSmodel


##########################################################################################
########################### CHECK THE RESULTS WITH NETMETA ##################
################################################################################
library(metafor)
library(meta)
library(xlsx)
library(readxl)
library(netmeta)
library(tidyverse)
#library(swirl)
library(WriteXLS)


dataAD<-cbind(c(1,1,2,2,2,3,3,4,4,5,5),c(1,4,1,2,4,3,4,4,2,4,2),c(343,172,309,161,157,574,281,25,25,126,125),c(100,93,92,53,73,173,157,19,11,97,89))
dataAD<-as.data.frame(dataAD)
colnames(dataAD)<-c("St","Dr","N_ran","N_rel")

TestPair <- pairwise(treat=Dr, event=N_rel, n=N_ran, data=dataAD, sm="OR", studlab=St, allstudies = TRUE)

net1 <- netmeta(TE, seTE, treat1, treat2, studlab, data = TestPair, sm = "OR", comb.random=FALSE, comb.fixed=TRUE, prediction=TRUE, ref=4)

summary(net1, digits = 2)

forest(net1,ref=4,fontsize=10)

##the results for the OR are exactly the same

##########################################################################################
########################### CHECK THE RESULTS WITH ADBayesian ##################
################################################################################
library(meta)
library(metafor)
library(netmeta)
library(readxl)
library(tidyverse)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags",force=TRUE)
library(NMAJags)
library(R2jags)

#model
modelNMABinary2=function ()
{
  for (i in 1:ns) {
    w[i, 1] <- 0
    theta[i, t[i, 1]] <- 0
    for (k in 1:na[i]) {
      r[i, t[i, k]] ~ dbin(p[i, t[i, k]], n[i, t[i, k]])
    }
    logit(p[i, t[i, 1]]) <- u[i]
    for (k in 2:na[i]) {
      logit(p[i, t[i, k]]) <- u[i] + theta[i, t[i, k]]
      theta[i, t[i, k]]<-md[i, t[i, k]]
      md[i, t[i, k]] <- mean[i, k] + sw[i, k]
      w[i, k] <- (theta[i, t[i, k]] - mean[i, k])
      sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
      mean[i, k] <- d[t[i, k]] - d[t[i, 1]]
    }
  }
  for (i in 1:ns) {
    u[i] ~ dnorm(0, 0.01)
  }


  d[ref] <- 0
  for (k in 1:(ref - 1)) {
    d[k] ~ dnorm(0, 0.01)
  }
  for (k in (ref + 1):nt) {
    d[k] ~ dnorm(0, 0.01)
  }
  for (i in 1:(nt - 1)) {
    for (j in (i + 1):nt) {
      OR[j, i] <- exp(d[j] - d[i])
      LOR[j, i] <- d[j] - d[i]
    }
  }
  for (j in 1:(ref - 1)) {
    ORref[j] <- exp(d[j] - d[ref])
    LORref[j]<-d[j]-d[ref]
  }
  for (j in (ref + 1):nt) {
    ORref[j] <- exp(d[j] - d[ref])
    LORref[j]<-d[j]-d[ref]
  }
}


##make NMA data
NMAdatabinary=make.jagsNMA.data(studyid=St,t=Dr,r=N_rel,n=N_ran,data=dataAD,type="binary",reference = 4)
##run the model
NMAinJAGS<- jags.parallel(data = NMAdatabinary, inits = NULL,
                          parameters.to.save = c("ORref","tau","d","u"), n.chains = 2, n.iter = 10000,n.burnin = 100,DIC=F,n.thin = 1,
                          model.file = modelNMABinary2)
print(NMAinJAGS)
###very similar!!









