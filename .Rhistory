}
for(i in 1:npf) {
for(j in (i+1):(npf+1)){
Omega.u[i,j]<-0
}
}
for (i in 2:(npf+1)){
for(j in (1:(i-1))){
Omega.u[i,j]<-0
}
}
sigma~dunif(0,10)
# priors for variance
prec.h<-1/tau.h
tau.h<-pow(sigma.h, 2)
sigma.h~dunif(0,10)
}
#give the data
jagsdataSMSC <- list(
Nobservations=nrow(SMSCdataC),
outcome=as.numeric(factor(SMSCdataC$relapse.2y.after.study))-1,
npf=9,
npid=length(unique(SMSCdataC$patient.id)),
subj=as.integer(factor(SMSCdataC$patient.id)),
age=SMSCdataC$age,
disease.duration=SMSCdataC$disease.duration,
edss=SMSCdataC$edss,
nr.Gd.enhanced.lesions=SMSCdataC$nr.Gd.enhanced.lesions,
nr.relapses.2y.prior.study=SMSCdataC$nr.relapses.2y.prior.study,
months.since.last.relapse=SMSCdataC$months.since.last.relapse,
treatment.naive.prior.visit=SMSCdataC$treatment.naive.prior.visit ,
gender=as.factor(SMSCdataC$gender),
treatment.during.cycle =as.factor(SMSCdataC$treatment.during.cycle),
treatment.time.during.cycle.months=SMSCdataC$treatment.time.during.cycle.months
)
# run the jugs model
SMSCjagsResults <- jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC2,
n.chains=2,n.iter = 10000,n.burnin = 1000,n.thin = 10)
jagsmodelSMSC2 <-function()
{
for( i in 1:Nobservations)
{
outcome[i]~dbern(p[i])
#likelihood
logit(p[i])<-b[1]+u[subj[i],1] + (b[2]+u[subj[i],2])*age[i]+(b[3]+u[subj[i],3])*disease.duration[i]+
(b[4]+u[subj[i],4])*edss[i]+(b[5]+u[subj[i],5])*nr.Gd.enhanced.lesions[i]+(b[6]+u[subj[i],6])*nr.relapses.2y.prior.study[i]+
(b[7]+u[subj[i],7])*months.since.last.relapse[i]+(b[8]+u[subj[i],8])*treatment.naive.prior.visit[i] +
(b[9]+u[subj[i],9])*gender[i] + (b[10]+u[subj[i],10])*treatment.time.during.cycle.months[i]+h[i]
h[i]~dnorm(0,prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
for (i in 1:(npf+1)){
b[i]~dnorm(0,0.001)
}
for(i in 1:(npf+1)){
zero[i]<-0
}
for (i in 1:npid){
u[i,1:(npf+1)]~dmnorm(zero, Omega.u) #precision matrix
}
for(i in 1:(npf+1)){
Omega.u[i,i]<-1/(pow(sigma,2))
}
for(i in 1:npf) {
for(j in (i+1):(npf+1)){
Omega.u[i,j]<-0
}
}
for (i in 2:(npf+1)){
for(j in (1:(i-1))){
Omega.u[i,j]<-0
}
}
sigma~dunif(0,10)
# priors for variance
prec.h<-1/tau.h
tau.h<-pow(sigma.h, 2)
sigma.h~dunif(0,10)
}
#give the data
jagsdataSMSC <- list(
Nobservations=nrow(SMSCdataC),
outcome=as.numeric(factor(SMSCdataC$relapse.2y.after.study))-1,
npf=9,
npid=length(unique(SMSCdataC$patient.id)),
subj=as.integer(factor(SMSCdataC$patient.id)),
age=SMSCdataC$age,
disease.duration=SMSCdataC$disease.duration,
edss=SMSCdataC$edss,
nr.Gd.enhanced.lesions=SMSCdataC$nr.Gd.enhanced.lesions,
nr.relapses.2y.prior.study=SMSCdataC$nr.relapses.2y.prior.study,
months.since.last.relapse=SMSCdataC$months.since.last.relapse,
treatment.naive.prior.visit=SMSCdataC$treatment.naive.prior.visit ,
gender=as.factor(SMSCdataC$gender),
treatment.during.cycle =as.factor(SMSCdataC$treatment.during.cycle),
treatment.time.during.cycle.months=SMSCdataC$treatment.time.during.cycle.months
)
# run the jugs model
SMSCjagsResults <- jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC2,
n.chains=2,n.iter = 10000,n.burnin = 1000,n.thin = 10)
##########################################################
############### LIBRARIES #################################
### Load needed variables
library(readxl)
library(dplyr)
library(rms)
#library(gee)
library(lme4)
library(R2jags)
# give/change your datapath (the datapath that includes the data)
mydatapath="C:/Users/kc19o338/Desktop/SMSC Basel"
# function that keeps only the needed variables (selected via pre-existing prognostic models on the literature, for RRMS patients)
# and makses the proper transformations for continues and categorical variables
# (in case you want to see all summary statistics for the SMSC data before and after the transformations you can run the SMSC_Summary.R script)
source("R/FinalDataSMSC.fun.R")
SMSCdata<-FinalDataSMSC.fun(mydatapath)
# the dataset with complete cases only, no missing values at all
SMSCdataC<-na.omit(SMSCdata)
#create a variable that indicates the cycle of the patient (i.e. 1st cycle, 2nd cycle, 3rd cycle, etc.) for the complete dataset
SMSCdataC$cycle <- ave(SMSCdataC$unique.visit.id, SMSCdataC$patient.id,  FUN = seq_along)
#create a column with patient ids as numeric for the complete dataset
SMSCdataC$NumericID <- as.numeric(factor(SMSCdataC$patient.id,
levels=unique(SMSCdataC$patient.id)))
glm_out2<-glm((outcome)~ nr.relapses.2y.prior.study,
data=SMSCdata_glmer, family = binomial)
SMSCdata_glmer<-SMSCdataC
SMSCdata_glmer$nr.Gd.enhanced.lesions<-as.numeric(SMSCdata_glmer$nr.Gd.enhanced.lesions)-1
SMSCdata_glmer$treatment.naive.prior.visit<-as.numeric(SMSCdata_glmer$treatment.naive.prior.visit)
SMSCdata_glmer$gender<-as.numeric(as.factor(SMSCdata_glmer$gender))-1
SMSCdata_glmer$nr.relapses.2y.prior.study<-as.numeric(SMSCdata_glmer$nr.relapses.2y.prior.study)-1
glm_out2<-glm((outcome)~ nr.relapses.2y.prior.study,
data=SMSCdata_glmer, family = binomial)
glm_out2
SMSCdata_glmer<-SMSCdataC
glm_out2<-glm((outcome)~ nr.relapses.2y.prior.study,
data=SMSCdata_glmer, family = binomial)
glm_out2
glm_out2<-glm((outcome)~ nr.Gd.enhanced.lesions,
data=SMSCdata_glmer, family = binomial)
glm_out2
SMSCdata_glmer<-SMSCdataC
SMSCdata_glmer$nr.Gd.enhanced.lesions<-as.numeric(SMSCdata_glmer$nr.Gd.enhanced.lesions)-1
SMSCdata_glmer$treatment.naive.prior.visit<-as.numeric(SMSCdata_glmer$treatment.naive.prior.visit)
SMSCdata_glmer$gender<-as.numeric(as.factor(SMSCdata_glmer$gender))-1
SMSCdata_glmer$nr.relapses.2y.prior.study<-as.numeric(SMSCdata_glmer$nr.relapses.2y.prior.study)-1
glm_out2<-glm((outcome)~ nr.Gd.enhanced.lesions,
data=SMSCdata_glmer, family = binomial)
glm_out2
jagsmodelSMSC <-function()
{
for( i in 1:Nobservations)
{
outcome[i]~dbern(p[i])
#likelihood
logit(p[i])<-b[1]+u[subj[i],1] + (b[2]+u[subj[i],2])*age[i]+(b[3]+u[subj[i],3])*disease.duration[i]+
(b[4]+u[subj[i],4])*edss[i]+(b[5]+u[subj[i],5])*nr.Gd.enhanced.lesions[i]+(b[6]+u[subj[i],6])*nr.relapses.2y.prior.study[i]+
(b[7]+u[subj[i],7])*months.since.last.relapse[i]+(b[8]+u[subj[i],8])*treatment.naive.prior.visit[i] +
(b[9]+u[subj[i],9])*gender[i] + (b[10]+u[subj[i],10])*treatment.time.during.cycle.months[i]+h[i]
h[i]~dnorm(0,prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
for (i in 1:(npf+1)){
b[i]~dnorm(0,0.001)
}
for(i in 1:(npf+1)){
zero[i]<-0
}
for (i in 1:npid){
u[i,1:(npf+1)]~dmnorm.vcov(zero[1:(npf+1)], Omega.u[1:(npf+1), 1:(npf+1)])
}
##fill in the R.u
for(i in 1:(npf+1)) {
R.u[i,i]<-sigma[i]*sigma[i]
}
for(i in 1:npf) {
for(j in (i+1):(npf+1)){
R.u[i,j]<-rho.u*sigma[i]*sigma[j]
}
}
for (i in 2:npf){
for(j in (1:(i-1))){
R.u[i,j]<-rho.u*sigma[i]*sigma[j]
}
}
#priors for varying intercept and slopes
for(i in (1:(npf+1))){
sigma[i]~dunif(0,10)
}
#prior for correlation
rho.u~dunif(-1,1)
#prior on precision Omega.u
Omega.u~dwish(R.u,(npf+1))
# priors for variance
prec.h<-1/tau.h
tau.h<-pow(sigma.h, 2)
sigma.h~dunif(0,10)
}
jagsdataSMSC <- list(
Nobservations=nrow(SMSCdataC),
outcome=SMSCdataC$outcome,
npf=10,
npid=length(unique(SMSCdataC$patient.id)),
#subj=sort(as.integer((SMSCdataC$NumericID))),
subj=as.integer(factor(SMSCdataC$patient.id)),
age=SMSCdataC$age,
disease.duration=SMSCdataC$disease.duration,
edss=SMSCdataC$edss,
nr.Gd.enhanced.lesions=SMSCdataC$nr.Gd.enhanced.lesions,
nr.relapses.2y.prior.study=SMSCdataC$nr.relapses.2y.prior.study,
months.since.last.relapse=SMSCdataC$months.since.last.relapse,
treatment.naive.prior.visit=SMSCdataC$treatment.naive.prior.visit ,
gender=as.factor(SMSCdataC$gender),
treatment.during.cycle =as.factor(SMSCdataC$treatment.during.cycle),
treatment.time.during.cycle.months=SMSCdataC$treatment.time.during.cycle.months
)
jagsdataSMSC <- list(
Nobservations=nrow(SMSCdataC),
outcome=SMSCdataC$outcome,
npf=9,
npid=length(unique(SMSCdataC$patient.id)),
#subj=sort(as.integer((SMSCdataC$NumericID))),
subj=as.integer(factor(SMSCdataC$patient.id)),
age=SMSCdataC$age,
disease.duration=SMSCdataC$disease.duration,
edss=SMSCdataC$edss,
nr.Gd.enhanced.lesions=SMSCdataC$nr.Gd.enhanced.lesions,
nr.relapses.2y.prior.study=SMSCdataC$nr.relapses.2y.prior.study,
months.since.last.relapse=SMSCdataC$months.since.last.relapse,
treatment.naive.prior.visit=SMSCdataC$treatment.naive.prior.visit ,
gender=as.factor(SMSCdataC$gender),
treatment.time.during.cycle.months=SMSCdataC$treatment.time.during.cycle.months
)
SMSCjagsResults <- jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
jagsmodelSMSC <-function()
{
for( i in 1:Nobservations)
{
outcome[i]~dbern(p[i])
#likelihood
logit(p[i])<-b[1]+u[subj[i],1] + (b[2]+u[subj[i],2])*age[i]+(b[3]+u[subj[i],3])*disease.duration[i]+
(b[4]+u[subj[i],4])*edss[i]+(b[5]+u[subj[i],5])*nr.Gd.enhanced.lesions[i]+(b[6]+u[subj[i],6])*nr.relapses.2y.prior.study[i]+
(b[7]+u[subj[i],7])*months.since.last.relapse[i]+(b[8]+u[subj[i],8])*treatment.naive.prior.visit[i] +
(b[9]+u[subj[i],9])*gender[i] + (b[10]+u[subj[i],10])*treatment.time.during.cycle.months[i]+h[i]
h[i]~dnorm(0,prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
for (i in 1:(npf+1)){
b[i]~dnorm(0,0.001)
}
for(i in 1:(npf+1)){
zero[i]<-0
}
for (i in 1:npid){
u[i,1:(npf+1)]~dmnorm(zero, Omega.u)
}
##fill in the R.u
for(i in 1:(npf+1)) {
R.u[i,i]<-sigma[i]*sigma[i]
}
for(i in 1:npf) {
for(j in (i+1):(npf+1)){
R.u[i,j]<-rho.u*sigma[i]*sigma[j]
}
}
for (i in 2:npf){
for(j in (1:(i-1))){
R.u[i,j]<-rho.u*sigma[i]*sigma[j]
}
}
#priors for varying intercept and slopes
for(i in (1:(npf+1))){
sigma[i]~dunif(0,10)
}
#prior for correlation
rho.u~dunif(-1,1)
#prior on precision Omega.u
Omega.u~dwish(R.u,(npf+1))
# priors for variance
prec.h<-1/tau.h
tau.h<-pow(sigma.h, 2)
sigma.h~dunif(0,10)
}
jagsdataSMSC <- list(
Nobservations=nrow(SMSCdataC),
outcome=SMSCdataC$outcome,
npf=9,
npid=length(unique(SMSCdataC$patient.id)),
#subj=sort(as.integer((SMSCdataC$NumericID))),
subj=as.integer(factor(SMSCdataC$patient.id)),
age=SMSCdataC$age,
disease.duration=SMSCdataC$disease.duration,
edss=SMSCdataC$edss,
nr.Gd.enhanced.lesions=SMSCdataC$nr.Gd.enhanced.lesions,
nr.relapses.2y.prior.study=SMSCdataC$nr.relapses.2y.prior.study,
months.since.last.relapse=SMSCdataC$months.since.last.relapse,
treatment.naive.prior.visit=SMSCdataC$treatment.naive.prior.visit ,
gender=as.factor(SMSCdataC$gender),
treatment.time.during.cycle.months=SMSCdataC$treatment.time.during.cycle.months
)
SMSCjagsResults <- jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
help(dmnorm)
jagsmodelSMSC <-function()
{
for( i in 1:Nobservations)
{
outcome[i]~dbern(p[i])
#likelihood
logit(p[i])<-b[1]+u[subj[i],1] + (b[2]+u[subj[i],2])*age[i]+(b[3]+u[subj[i],3])*disease.duration[i]+
(b[4]+u[subj[i],4])*edss[i]+(b[5]+u[subj[i],5])*nr.Gd.enhanced.lesions[i]+(b[6]+u[subj[i],6])*nr.relapses.2y.prior.study[i]+
(b[7]+u[subj[i],7])*months.since.last.relapse[i]+(b[8]+u[subj[i],8])*treatment.naive.prior.visit[i] +
(b[9]+u[subj[i],9])*gender[i] + (b[10]+u[subj[i],10])*treatment.time.during.cycle.months[i]+h[i]
h[i]~dnorm(0,prec.h)
}
#priors for fixed effects for b[i] (fixef intercept and slopes)
for (i in 1:(npf+1)){
b[i]~dnorm(0,0.001)
}
for(i in 1:(npf+1)){
zero[i]<-0
}
for (i in 1:npid){
u[i,1:(npf+1)]~dmnorm.vcov(zero, Omega.u)
}
##fill in the R.u
for(i in 1:(npf+1)) {
R.u[i,i]<-sigma[i]*sigma[i]
}
for(i in 1:npf) {
for(j in (i+1):(npf+1)){
R.u[i,j]<-rho.u*sigma[i]*sigma[j]
}
}
for (i in 2:npf){
for(j in (1:(i-1))){
R.u[i,j]<-rho.u*sigma[i]*sigma[j]
}
}
#priors for varying intercept and slopes
for(i in (1:(npf+1))){
sigma[i]~dunif(0,10)
}
#prior for correlation
rho.u~dunif(-1,1)
#prior on precision Omega.u
Omega.u~dwish(R.u,npf+1)
# priors for variance
prec.h<-1/tau.h
tau.h<-pow(sigma.h, 2)
sigma.h~dunif(0,10)
}
jagsdataSMSC <- list(
Nobservations=nrow(SMSCdataC),
outcome=SMSCdataC$outcome,
npf=9,
npid=length(unique(SMSCdataC$patient.id)),
#subj=sort(as.integer((SMSCdataC$NumericID))),
subj=as.integer(factor(SMSCdataC$patient.id)),
age=SMSCdataC$age,
disease.duration=SMSCdataC$disease.duration,
edss=SMSCdataC$edss,
nr.Gd.enhanced.lesions=SMSCdataC$nr.Gd.enhanced.lesions,
nr.relapses.2y.prior.study=SMSCdataC$nr.relapses.2y.prior.study,
months.since.last.relapse=SMSCdataC$months.since.last.relapse,
treatment.naive.prior.visit=SMSCdataC$treatment.naive.prior.visit ,
gender=as.factor(SMSCdataC$gender),
treatment.time.during.cycle.months=SMSCdataC$treatment.time.during.cycle.months
)
SMSCjagsResults <- jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b'),model.file = jagsmodelSMSC,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
##########################################################
############### LIBRARIES #################################
### Load needed variables
library(readxl)
library(dplyr)
library(rms)
#library(gee)
library(lme4)
library(R2jags)
# give/change your datapath (the datapath that includes the data)
mydatapath="C:/Users/kc19o338/Desktop/SMSC Basel"
# function that keeps only the needed variables (selected via pre-existing prognostic models on the literature, for RRMS patients)
# and makses the proper transformations for continues and categorical variables
# (in case you want to see all summary statistics for the SMSC data before and after the transformations you can run the SMSC_Summary.R script)
source("R/FinalDataSMSC.fun.R")
SMSCdata<-FinalDataSMSC.fun(mydatapath)
# the dataset with complete cases only, no missing values at all
SMSCdataC<-na.omit(SMSCdata)
#create a variable that indicates the cycle of the patient (i.e. 1st cycle, 2nd cycle, 3rd cycle, etc.) for the complete dataset
SMSCdataC$cycle <- ave(SMSCdataC$unique.visit.id, SMSCdataC$patient.id,  FUN = seq_along)
#create a column with patient ids as numeric for the complete dataset
SMSCdataC$NumericID <- as.numeric(factor(SMSCdataC$patient.id,
levels=unique(SMSCdataC$patient.id)))
jagsmodelSMSC2 <-function(){
for( i in 1:Nobservations)
{
outcome[i]~dbern(p[i])
#likelihood
logit(p[i])<-b[1]+u[subj[i],1] + (b[2]+u[subj[i],2])*age[i]+(b[3]+u[subj[i],3])*disease.duration[i]+
(b[4]+u[subj[i],4])*edss[i]+(b[5]+u[subj[i],5])*nr.Gd.enhanced.lesions[i]+(b[6]+u[subj[i],6])*nr.relapses.2y.prior.study[i]+(b[7]+u[subj[i],7])*months.since.last.relapse[i]+(b[8]+u[subj[i],8])*treatment.naive.prior.visit[i] + (b[9]+u[subj[i],9])*gender[i] + (b[10]+u[subj[i],10])*treatment.time.during.cycle.months[i]+h[i]
h[i]~dnorm(0,prec.h)
}
#priors for fixed effects b[i] (fixed efffects intercept and slopes)
for (i in 1:(npf+1))
{
b[i]~dnorm(0,0.001)
}
for(i in 1:npid)
{
for (j in 1:(npf+1))
{
u[i,j]~dnorm(0, prec.u[j])
}
}
for(i in 1:(npf+1))
{
prec.u[i]<-1/sigma2.u[i]
sigma2.u[i]<-pow(sigma.u[i], 2)
sigma.u[i]~dunif(0,2)
}
# priors for variance
prec.h<-1/sigma2.h
sigma2.h<-pow(sigma.h, 2)
sigma.h~dunif(0,2)
}
# The data
jagsdataSMSC <- list(
Nobservations=nrow(SMSCdataC),
outcome=as.numeric(factor(SMSCdataC$relapse.2y.after.study))-1,
npf=9,
npid=length(unique(SMSCdataC$patient.id)),
subj=as.integer(factor(SMSCdataC$patient.id)),
age=SMSCdataC$age,
disease.duration=SMSCdataC$disease.duration,
edss=SMSCdataC$edss,
nr.Gd.enhanced.lesions=SMSCdataC$nr.Gd.enhanced.lesions,
nr.relapses.2y.prior.study=SMSCdataC$nr.relapses.2y.prior.study,
months.since.last.relapse=SMSCdataC$months.since.last.relapse,
treatment.naive.prior.visit=SMSCdataC$treatment.naive.prior.visit ,
gender=as.factor(SMSCdataC$gender),
treatment.during.cycle =as.factor(SMSCdataC$treatment.during.cycle),
treatment.time.during.cycle.months=SMSCdataC$treatment.time.during.cycle.months
)
# run the jugs model
SMSCjagsResults <- jags.parallel(data = jagsdataSMSC ,inits=NULL,parameters.to.save = c('b', 'sigma2.h', 'sigma2.u'),model.file = jagsmodelSMSC2,
n.chains=2,n.iter = 100000,n.burnin = 1000,DIC=F,n.thin = 10)
SMSCjagsResults
##########################################################
############### LIBRARIES #################################
### Load needed variables
library(readxl)
library(dplyr)
library(rms)
#library(gee)
library(lme4)
library(R2jags)
# give/change your datapath (the datapath that includes the data)
mydatapath="C:/Users/kc19o338/Desktop/SMSC Basel"
# function that keeps only the needed variables (selected via pre-existing prognostic models on the literature, for RRMS patients)
# and makses the proper transformations for continues and categorical variables
# (in case you want to see all summary statistics for the SMSC data before and after the transformations you can run the SMSC_Summary.R script)
source("R/FinalDataSMSC.fun.R")
SMSCdata<-FinalDataSMSC.fun(mydatapath)
# the dataset with complete cases only, no missing values at all
SMSCdataC<-na.omit(SMSCdata)
#create a variable that indicates the cycle of the patient (i.e. 1st cycle, 2nd cycle, 3rd cycle, etc.) for the complete dataset
SMSCdataC$cycle <- ave(SMSCdataC$unique.visit.id, SMSCdataC$patient.id,  FUN = seq_along)
#create a column with patient ids as numeric for the complete dataset
SMSCdataC$NumericID <- as.numeric(factor(SMSCdataC$patient.id,
levels=unique(SMSCdataC$patient.id)))
SMSCdata_glmer<-SMSCdataC
SMSCdata_glmer$nr.Gd.enhanced.lesions<-as.numeric(SMSCdata_glmer$nr.Gd.enhanced.lesions)-1
SMSCdata_glmer$treatment.naive.prior.visit<-as.numeric(SMSCdata_glmer$treatment.naive.prior.visit)
SMSCdata_glmer$gender<-as.numeric(as.factor(SMSCdata_glmer$gender))-1
SMSCdata_glmer$nr.relapses.2y.prior.study<-as.numeric(SMSCdata_glmer$nr.relapses.2y.prior.study)-1
mean(SMSCdata_glmer$age)
sd(SMSCdata_glmer$age)
SMSCdata_glmer<-SMSCdataC
SMSCdata_glmer$nr.Gd.enhanced.lesions<-as.numeric(SMSCdata_glmer$nr.Gd.enhanced.lesions)-1
SMSCdata_glmer$treatment.naive.prior.visit<-as.numeric(SMSCdata_glmer$treatment.naive.prior.visit)
SMSCdata_glmer$gender<-as.numeric(as.factor(SMSCdata_glmer$gender))-1
SMSCdata_glmer$nr.relapses.2y.prior.study<-as.numeric(SMSCdata_glmer$nr.relapses.2y.prior.study)-1
SMSCdata_glmer$age<-(SMSCdata_glmer$age-mean(SMSCdata_glmer$age))/sd(SMSCdata_glmer$age)
SMSCdata_glmer$age
SMSCdata_glmer$disease.duration<-(SMSCdata_glmer$disease.duration-mean(SMSCdata_glmer$disease.duration))/sd(SMSCdata_glmer$disease.duration)
SMSCdata_glmer$disease.duration
SMSCdata_glmer$edss<-(SMSCdata_glmer$edss-mean(SMSCdata_glmer$edss))/sd(SMSCdata_glmer$edss)
SMSCdata_glmer$edss
SMSCdata_glmer$months.since.last.relapse<-(SMSCdata_glmer$months.since.last.relapse-mean(SMSCdata_glmer$months.since.last.relapse))/sd(SMSCdata_glmer$months.since.last.relapse)
SMSCdata_glmer$months.since.last.relapse
SMSCdata_glmer$treatment.time.during.cycle.months<-(SMSCdata_glmer$treatment.time.during.cycle.months-mean(SMSCdata_glmer$treatment.time.during.cycle.months))/sd(SMSCdata_glmer$treatment.time.during.cycle.months)
SMSCdata_glmer$treatment.time.during.cycle.months
glmer_out<-glmer(outcome ~ (1|patient.id) + age + disease.duration + edss + nr.Gd.enhanced.lesions + nr.relapses.2y.prior.study+
months.since.last.relapse + treatment.naive.prior.visit + gender + treatment.time.during.cycle.months +
(-1+age|patient.id)+(-1+treatment.time.during.cycle.months|patient.id)+(-1+edss|patient.id)+(-1+months.since.last.relapse|patient.id)
+ (-1+nr.Gd.enhanced.lesions|patient.id) + (-1+treatment.naive.prior.visit|patient.id)
+ (-1+gender|patient.id) + (-1+nr.relapses.2y.prior.study|patient.id),
data=SMSCdata_glmer, family = binomial, nAGQ = 0)
glm_out<-glm((outcome)~ age + disease.duration + edss + nr.Gd.enhanced.lesions + nr.relapses.2y.prior.study +
months.since.last.relapse + treatment.naive.prior.visit + gender + treatment.time.during.cycle.months,
data=SMSCdata_glmer, family = binomial)
#the results of the mixed-effects model
summary(glmer_out) #message that the model failed to converge
# compare them with a model with fixed effects only (glm)
summary(glm_out)
#the results of the mixed-effects model
summary(glmer_out) #message that the model failed to converge
#the results of the mixed-effects model
summary(glmer_out) #message that the model failed to converge
# compare them with a model with fixed effects only (glm)
summary(glm_out)
