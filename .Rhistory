cv.pf.em.both
##plot lambda
plot(cv.fit.both)
# Method of shrinkage. Model with LASSO selected variables and coefficients
###logistic model based on LASSO selected variables
finalmodel<-lrm(RELAPSE2year~AGE+WEIGHTBL+EDSSBL+RLPS1YR+PRMSGR+REGION+GDVOLBL+SFPCSBL+DISTWKBL,x=TRUE,y=TRUE,linear.predictors = T,data=X)
finalmodel
lassomodel<-finalmodel
#lasso coefficients
lassocoef<-as.matrix(cv.coef.both)
##insert lasso coefficients to the model
lassomodel$coefficients[1]<-lassocoef[1]
lassomodel$coefficients[2]<-lassocoef[2]
lassomodel$coefficients[3]<-lassocoef[7]
lassomodel$coefficients[4]<-lassocoef[8]
lassomodel$coefficients[5]<-lassocoef[11]
lassomodel$coefficients[6]<-lassocoef[15]
lassomodel$coefficients[7]<-lassocoef[16]
lassomodel$coefficients[8]<-lassocoef[17]
lassomodel$coefficients[9]<-lassocoef[18]
lassomodel$coefficients[10]<-lassocoef[19]
lassomodel$coefficients[11]<-lassocoef[23]
lassomodel$coefficients[12]<-lassocoef[25]
lassomodel$coefficients[13]<-lassocoef[44]
###return
cat("The selected variables and their coefficients by LASSO model are:" )
print(lassomodel)
return(list(lassomodel=lassomodel))
}
if (model=="PreSpecifiedModel") {
#drop STUDYID, USIBJID (no needed for the matrix), drop TRT01A (blinded to treatment)
todrop<-c("STUDYID","USUBJID","TRT01A")
X<-dataset[ , !(names(dataset) %in% todrop)]
X<-na.omit(X)
finalmodel<-lrm(RELAPSE2year~AGE+SEX+EDSSBL+ONSYRS+RACE+RLPS1YR+TRELMOS+PRMSGR+T25FWABL+NHPTMBL+PASATABL+VFT25BL+SFPCSBL+SFMCSBL,x=TRUE,y=TRUE,linear.predictors = TRUE,data=X)
finalmodel
### Method of shrinkage. Make a PMLE penalized model based on minimizing a modified AIC criterion
# Make a penalized model
set.seed(1)
penalized	<-  pentrace(finalmodel, seq(0,200,0.1))
finalmodel.pen <- update (finalmodel, penalty=penalized$penalty)
cat("PreSpecified et al. model is:")
print(finalmodel.pen)
return(list(PreSpecifiedmodel=finalmodel.pen))
}
}
######## Model 1 - results of LASSO model
LASSOModel<-RiskModels.fun(MSrelapse,"LASSOModel")
lassomodel
PreSpecifiedmodel
PreSpecifiedModel
LASSOModel$lassomodel
PreSpecifiedModel$PreSpecifiedModel
lassomodel
PreSpecifiedModel$PreSpecifiedmodel
###bootstrap calibration and discrimination
###needs more than 3 hours to run! You can skip it without any problem further
###Performance table of models : discrimination and calibration
data1<-na.omit(MSrelapse)
todrop<-c("STUDYID","USUBJID","TRT01A")
data1<-data1[ , !(names(data1) %in% todrop)]
Internal_validation<-BootstrapValidation.fun(data=data1, samples = 500, alpha = 1, modelElasticNet = LASSOModel$lassomodel, modelSpecific = PreSpecifiedModel$PreSpecifiedmodel)
### Create a dataset that includes Risk's and logit Risk's predictions for each individual and for both models
##Also make treatment and studies numerical values
source("RiskData.R")
#####source the script for the plots of risk score
source('Plots.R')
#add proper columns in the RiskData, like arm, meanRisk, etc.
source('DataForIPDNMR.R')
#run the model & results - it needs some time (around 5 minutes)
IPDNMRJAGSmodelLASSO <- jags.parallel(data = jagsdataIPDNMRLASSO,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
IPDNMRJAGSmodelLASSO
IPDNMRJAGSmodelPreSpecified <- jags.parallel(data = jagsdataIPDNMRPreSpecified,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
# Results using LASSO model
print(IPDNMRJAGSmodelLASSO,varname=c("gamma.w","ORref","u","delta"))
# Results using Pellegrini's model
print(IPDNMRJAGSmodelPreSpecified,varname=c("gamma.w","ORref","u","delta"))
####plot of IPD NMR with both models
source('GraphForPredictedRisk.R')
## all the tables and the figures presented in the paper can be reproduced by using the script "Paper - Tables and Figures.R"
source('Paper - Tables and Figures.R')
#Table 1
AFFIRM
CONFIRM
DEFINE
Placebo
#Table 2
Table_LASSOModel
Table_PreSpecifiedModel
#Table 3
IPDNMR_Table
#Table 4
##predicted probabilities to relapse in 2 years
LASSOtable #for LASSO model
PreSpecifiedtable #for pre-specified model
###ORs of relapsing in 2 years
LASSOtableOR #for LASSO model
PreSpecifiedtableOR #for pre-specified model
#Figure 1
ggarrange(PrognosticRiskLASSO,PrognosticRiskPreSpecified,ncol = 1,nrow = 2,labels = c("A  LASSO model","B  Pre-specified model"), hjust=-0.2,font.label = list(size = 11))
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#Appendix figure 1
ggarrange(IPDplotLASSO_OR,IPDplotPreSpecified_OR,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#Appendix figure 3
Flowchart
############################# R-shiny app ##################################################################
source('R-shiny.R')
shinyApp(ui = ui, server = server) #also available in https://cinema.ispm.unibe.ch/shinies/koms/
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
install_github("htx-r/NMAPredictionsRiskModel", force = TRUE)
library(NMAPredictionsRiskModel)
library(CleaningData)
library(R2jags)
library(dplyr)
library(glmpath)
library(readxl)
library(car)
library(glmnet)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data cleaning"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
adsl01<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
adsl<-adsl01[adsl01$STUDYID!="SENTINEL" & adsl01$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
MSrelapse<-numericalDataRisk.fun(adsl)  ##final full dataset
#Step 1. Obtain the EPV and the required sample size for the development of the models
source('EPVandSampleSize.R')
######## Model 1 - results of LASSO model with LASSO shrinkage
LASSOModel<-RiskModels.fun(MSrelapse,"LASSOModel")
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
install_github("htx-r/NMAPredictionsRiskModel", force = TRUE)
library(NMAPredictionsRiskModel)
library(CleaningData)
library(R2jags)
library(dplyr)
library(glmpath)
library(readxl)
library(car)
library(glmnet)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data cleaning"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
adsl01<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
adsl<-adsl01[adsl01$STUDYID!="SENTINEL" & adsl01$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
MSrelapse<-numericalDataRisk.fun(adsl)  ##final full dataset
#Step 1. Obtain the EPV and the required sample size for the development of the models
source('EPVandSampleSize.R')
######## Model 1 - results of LASSO model with LASSO shrinkage
LASSOModel<-RiskModels.fun(MSrelapse,"LASSOModel")
#########  Model 2 - Results of Pre-specified model using Penalized Maximum Likelihood Estimation for shrinkage
PreSpecifiedModel<-RiskModels.fun(MSrelapse,"PreSpecifiedModel")
#Step 4. Create a dataset that includes Risk's and logit Risk's predictions for each individual and for both models
##Also make treatment and studies numerical values
source("RiskData.R")
#Step 5. Source the script for the plots of risk score
source('Plots.R')
#Step 1.  Add proper columns in the RiskData, like arm, meanRisk, etc.
source('DataForIPDNMR.R')
#Step 2. Run the model & results & check of traceplots
IPDNMRJAGSmodelLASSO <- jags.parallel(data = jagsdataIPDNMRLASSO,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
IPDNMRJAGSmodelPreSpecified <- jags.parallel(data = jagsdataIPDNMRPreSpecified,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
# Results using LASSO model
print(IPDNMRJAGSmodelLASSO,varname=c("gamma.w","ORref","u","delta"))
# Results using Pellegrini's model
print(IPDNMRJAGSmodelPreSpecified,varname=c("gamma.w","ORref","u","delta"))
#Step 3. Plot of IPD NMR with both models
source('GraphForPredictedRisk.R')
############################ All tables and figures of presented in the paper #########################
source('Paper - Tables and Figures.R')
#Table 1
AFFIRM
CONFIRM
DEFINE
Placebo
#Table 2
Table_LASSOModel
Table_PreSpecifiedModel
#Table 3
IPDNMR_Table
#Table 4
##predicted probabilities to relapse in 2 years
LASSOtable #for LASSO model
PreSpecifiedtable #for pre-specified model
###ORs of relapsing in 2 years
LASSOtableOR #for LASSO model
PreSpecifiedtableOR #for pre-specified model
#Figure 1
ggarrange(PrognosticRiskLASSO,PrognosticRiskPreSpecified,ncol = 1,nrow = 2,labels = c("A  LASSO model","B  Pre-specified model"), hjust=-0.2,font.label = list(size = 11))
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#Appendix figure 1
ggarrange(IPDplotLASSO_OR,IPDplotPreSpecified_OR,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#Appendix figure 3
Flowchart
############################# R-shiny app ##################################################################
source('R-shiny.R')
shinyApp(ui = ui, server = server) #also available in https://cinema.ispm.unibe.ch/shinies/koms/
#Figure 1
ggarrange(PrognosticRiskLASSO,PrognosticRiskPreSpecified,ncol = 1,nrow = 2,labels = c("A  LASSO model","B  Pre-specified model"), hjust=-0.2,font.label = list(size = 11))
#Figure 2
ggarrange(IPDplotLASSO,IPDplotPreSpecified,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#Appendix figure 1
ggarrange(IPDplotLASSO_OR,IPDplotPreSpecified_OR,ncol = 1,nrow = 2,labels = c("A","B"),font.label = list(size = 11))
#Appendix figure 3
Flowchart
sink("Appendix Figure 3.pdf")
Flowchart
sink()
sink("Appendix Figure 3.pdf")
Flowchart
sink()
sink("Appendix Figure 3.pdf")
Flowchart
dec.off()
dev.off()
sink("LASSO Traceplots")
traceplot(IPDNMRJAGSmodelLASSO$BUGSoutput,varname=c("be","ORref","u"))
# traceplots
sink("LASSO Traceplots.pdf")
traceplot(IPDNMRJAGSmodelLASSO$BUGSoutput,varname=c("be","ORref","u"))
sink()
# traceplots
sink("LASSO Traceplots.pdf")
traceplot(IPDNMRJAGSmodelLASSO$BUGSoutput,varname=c("be","ORref","u"))
dev.off()
#Table 1
AFFIRM
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
install_github("htx-r/NMAPredictionsRiskModel", force = TRUE)
library(CleaningData)
library(R2jags)
library(NMAPredictionsRiskModel)
library(dplyr)
library(glmpath)
library(readxl)
library(car)
library(glmnet)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data cleaning"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
adsl01<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
adsl<-adsl01[adsl01$STUDYID!="SENTINEL" & adsl01$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
MSrelapse<-numericalDataRisk.fun(adsl)  ##final full dataset
#Step 1. Obtain the EPV and the required sample size for the development of the models
source('EPVandSampleSize.R')
######## Model 1 - results of LASSO model with LASSO shrinkage
LASSOModel<-RiskModels.fun(MSrelapse,"LASSOModel")
#########  Model 2 - Results of Pre-specified model using Penalized Maximum Likelihood Estimation for shrinkage
PreSpecifiedModel<-RiskModels.fun(MSrelapse,"PreSpecifiedModel")
#Step 4. Create a dataset that includes Risk's and logit Risk's predictions for each individual and for both models
##Also make treatment and studies numerical values
source("RiskData.R")
#Step 5. Source the script for the plots of risk score
source('Plots.R')
#Step 1.  Add proper columns in the RiskData, like arm, meanRisk, etc.
source('DataForIPDNMR.R')
#Step 2. Run the model & results & check of traceplots
IPDNMRJAGSmodelLASSO <- jags.parallel(data = jagsdataIPDNMRLASSO,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
IPDNMRJAGSmodelPreSpecified <- jags.parallel(data = jagsdataIPDNMRPreSpecified,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
# traceplots
pdf("LASSO Traceplots.pdf")
traceplot(IPDNMRJAGSmodelLASSO$BUGSoutput,varname=c("ORref","u", "gamma.w", "gamma"))
pdf("PreSpecified Traceplots.pdf")
traceplot(IPDNMRJAGSmodelPreSpecified$BUGSoutput,varname=c("ORref","u", "gamma.w", "gamma"))
dev.off()
# traceplots
pdf("LASSO Traceplots.pdf")
traceplot(IPDNMRJAGSmodelLASSO$BUGSoutput,varname=c("ORref","u", "gamma.w", "gamma"))
dev.off()
# traceplots
pdf("LASSO Traceplots .pdf")
traceplot(IPDNMRJAGSmodelLASSO$BUGSoutput,varname=c("ORref","u", "gamma.w", "gamma"))
dev.off()
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
install_github("htx-r/NMAPredictionsRiskModel", force = TRUE)
library(NMAPredictionsRiskModel)
library(CleaningData)
library(dplyr)
library(R2jags)
library(glmpath)
library(readxl)
library(car)
library(glmnet)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data cleaning"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
adsl01<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
adsl<-adsl01[adsl01$STUDYID!="SENTINEL" & adsl01$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
MSrelapse<-numericalDataRisk.fun(adsl)  ##final full dataset
#Step 1. Obtain the EPV and the required sample size for the development of the models
sink("EPV & Sample size.txt")
source('EPVandSampleSize.R')
sink()
######## Model 1 - results of LASSO model with LASSO shrinkage
LASSOModel<-RiskModels.fun(MSrelapse,"LASSOModel")
#########  Model 2 - Results of Pre-specified model using Penalized Maximum Likelihood Estimation for shrinkage
PreSpecifiedModel<-RiskModels.fun(MSrelapse,"PreSpecifiedModel")
#Step 4. Create a dataset that includes Risk's and logit Risk's predictions for each individual and for both models
##Also make treatment and studies numerical values
source("RiskData.R")
#Step 5. Source the script for the plots of risk score
source('Plots.R')
#Step 1.  Add proper columns in the RiskData, like arm, meanRisk, etc.
source('DataForIPDNMR.R')
#Step 2. Run the model & results & check of traceplots
IPDNMRJAGSmodelLASSO <- jags.parallel(data = jagsdataIPDNMRLASSO,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
IPDNMRJAGSmodelPreSpecified <- jags.parallel(data = jagsdataIPDNMRPreSpecified,inits=NULL,parameters.to.save = c('gamma.w', 'logitpplacebo','gamma', 'ORref','delta','u','logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
#Step 3. Plot of IPD NMR with both models
source('GraphForPredictedRisk.R')
############################ All tables and figures of presented in the paper #########################
source('Paper - Tables and Figures.R')
#Table 1
sink("Table 1.txt")
AFFIRM
CONFIRM
DEFINE
Placebo
sink()
Table_LASSOModel
print(Table_LASSOModel)
help(print)
print(Table_LASSOModel, title="LASSO model")
print(Table_LASSOModel, title= "LASSO model")
comment(Table_LASSOModel)<-"LASSO model"
Table_LASSOModel
print("LASSO table", Table_LASSOModel)
paste("LASSO table", Table_LASSOModel)
Table_LASSOModel
print(c("LASSO table", Table_LASSOModel))
print("LASSO table")
#Table 2
sink("Table 1.txt")
print("LASSO Model")
Table_LASSOModel
print("Pre-Specified Model")
Table_PreSpecifiedModel
sink()
#Table 1
sink("Table 1.txt")
print("AFFIRM study")
AFFIRM
print("CONFIRM study")
CONFIRM
print("DEFINE study")
DEFINE
print("Placebo single-arm study")
Placebo
sink()
#Table 3
sink("Table 3.txt")
IPDNMR_Table
sink()
#Table 4
##predicted probabilities to relapse in 2 years
sink("Table 4.txt")
print("PREDICTED PROBABILITY TO RELAPSE IN TWO YEARS")
print("LASSO model")
LASSOtable #for LASSO model
print("Pre-Specified model")
PreSpecifiedtable #for pre-specified model
###ORs of relapsing in 2 years
print("ORs OF RELAPSING IN TWO YEARS")
print("LASSO model")
LASSOtableOR #for LASSO model
print("Pre-Specified model")
PreSpecifiedtableOR #for pre-specified model
sink()
#Table 4
##predicted probabilities to relapse in 2 years
round(LASSOtable,2) #for LASSO model
round(PreSpecifiedtable,2) #for pre-specified model
###ORs of relapsing in 2 years
round(LASSOtableOR,2) #for LASSO model
round(PreSpecifiedtableOR,2) #for pre-specified model
#Table 4
##predicted probabilities to relapse in 2 years
round(LASSOtable,0) #for LASSO model
#Table 4
##predicted probabilities to relapse in 2 years
sink("Table 4.txt")
print("PREDICTED PROBABILITIES TO RELAPSE IN TWO YEARS")
print("LASSO model")
round(LASSOtable,0) #for LASSO model
print("Pre-Specified model")
round(PreSpecifiedtable,0) #for pre-specified model
###ORs of relapsing in 2 years
print("ORs OF RELAPSING IN TWO YEARS")
print("LASSO model")
round(LASSOtableOR,2) #for LASSO model
print("Pre-Specified model")
round(PreSpecifiedtableOR,2) #for pre-specified model
sink()
#########################   END    #################################################################
rm(list=ls())
#########################   END    #################################################################
rm(list=ls())
