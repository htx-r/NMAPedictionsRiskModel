Nnew=nrow(RiskData),
arm=RiskData$arm,
Risk=RiskData$logitRiskPreSpecified,
meanRisk=c(tapply(RiskData$logitRiskPreSpecified, RiskData$STUDYID, summary)$`1`[4],tapply(RiskData$logitRiskPreSpecified, RiskData$STUDYID, summary)$`2`[4],tapply(RiskData$logitRiskPreSpecified, RiskData$STUDYID, summary)$`3`[4]), ##here is the mean of logit of risk
nt=4,
ref=4
)
#NMR model
IPDNMRJAGSmodel_PreSpecified_concordance <- jags.parallel(data = jagsdataIPDNMR_PreSpecified_concordance,inits=NULL,parameters.to.save = c('logitp'),model.file = modelIPDNMR,
n.chains=2,n.iter = 10000,n.burnin = 1000,DIC=F,n.thin = 10)
p<-IPDNMRJAGSmodel_PreSpecified_concordance$BUGSoutput$mean$logitp
expit<-function(x) {exp(x)/(1+exp(x))}
p<-expit(IPDNMRJAGSmodelLASSOconcordance$BUGSoutput$mean$logitp)
p<-IPDNMRJAGSmodel_PreSpecified_concordance$BUGSoutput$mean$logitp
expit<-function(x) {exp(x)/(1+exp(x))}
p<-expit(IPDNMRJAGSmodel_PreSpecified_concordance$BUGSoutput$mean$logitp)
p<-as.data.frame(p)
p
colnames(p)<-c("Dimethyl Fumarate","Glatiramer Acetate","Natalizumab","Placebo")
p
## We add the observed outcome for each one of the patients
Relapse2year<-RiskData$RELAPSE2year
Relapse2year<-as.data.frame(Relapse2year)
Data<-cbind(p,Relapse2year)
Relapse2year
Data<-cbind(p,Relapse2year)
Data
benefit<-as.data.frame(Data$Natalizumab-Data$Placebo) #Predicted benefit of Natalizumab vs Placebo
FinalData<-cbind(Data,benefit)
FinalData
benefit<-as.data.frame(Data$Placebo-Data$Natalizumab) #Predicted benefit of Natalizumab vs Placebo
FinalData<-cbind(Data,benefit)
FinalData
benefit<-as.data.frame(Data$Placebo-Data$Natalizumab) #Predicted benefit of Natalizumab vs Placebo
names(benefit)<-c("Benefit")
FinalData<-cbind(Data,benefit)
FinalData
Treatment<-RiskData$TRT01A
Treatment
Treatment<-as.data.frame(RiskData$TRT01A)
Treatment
colnames(Treatment)<-c("Treatment")
FinalData<-cbind(FinalData,Treatment)
FinalData
### Keep only patients under Placebo or Natalizumab (Now we examine only the c-for benefit of Natalizumab)
FinalData<-FinalData[which(FinalData$Treatment==3  | FinalData$Treatment==4),]
FinalData
FinalData[which(FinalData$Treatment==3
),]
##obtain probabilities instead of logit p
p<-IPDNMRJAGSmodel_PreSpecified_concordance$BUGSoutput$mean$logitp
expit<-function(x) {exp(x)/(1+exp(x))}
p<-expit(IPDNMRJAGSmodel_PreSpecified_concordance$BUGSoutput$mean$logitp)
p<-as.data.frame(p) # this is a table with 2000 patients and their probabilities under each one of the treatments
colnames(p)<-c("Dimethyl Fumarate","Glatiramer Acetate","Natalizumab","Placebo")
## We add to the previous table the observed outcome for each one of the patients
Relapse2year<-RiskData$RELAPSE2year
Relapse2year<-as.data.frame(Relapse2year)
Data<-cbind(p,Relapse2year)
## We add a column with the predicted benefit of Natalizumab vs Placebo
benefit<-as.data.frame(Data$Placebo-Data$Natalizumab) #Predicted benefit of Natalizumab vs Placebo
names(benefit)<-c("Benefit")
FinalData<-cbind(Data,benefit)
### We add the column with the actual treatment that each patient was randomized to take
Treatment<-as.data.frame(RiskData$TRT01A)
colnames(Treatment)<-c("Treatment")
FinalData<-cbind(FinalData,Treatment)
FinalData
table(FinalData$Treatment)
### Keep only patients under Placebo or Natalizumab (Now we examine only the c-for benefit of Natalizumab)
#FinalData<-FinalData[which(FinalData$Treatment==3  | FinalData$Treatment==4),]
FinalDataNat<-FinalData[which(FinalData$Treatment==3),]
FinalDataPla<-FinalData[which(FinalData$Treatment==4),]
FinalDataNat
FinalDataPla
nrow(FinalDataNat)
nrow(FinalDataPla)
min(nrow(FinalDataNat),nrow(FinalDataNat))
FinalDataPla<-sample_n(FinalDataPla,min(nrow(FinalDataNat),nrow(FinalDataNat)))
FinalDataPla
## keep equal number of patients in each arm, select randomly from the largest arm as many patients as there are in the
# smallest arm
nrow(FinalDataNat)
nrow(FinalDataNat)
min(nrow(FinalDataNat),nrow(FinalDataNat))
nrow(FinalDataPla)
min(nrow(FinalDataNat),nrow(FinalDataNat))
FinalDataPla<-sample_n(FinalDataPla,min(nrow(FinalDataNat),nrow(FinalDataNat)))
FinalDataPla
# Step 7. Order each arm based on predicted benefits
FinalDataPla<-FinalDataPla[order(FinalDataPla$Benefit),]
FinalDataNat<-FinalDataNat[order(FinalDataNat$Benefit),]
FinalDataPla
FinalDataNat
# Matched patient pair data
x<-data.frame(FinalDataNat$Benefit,FinalDataNat$Relapse2year,FinalDataPla$Benefit,FinalDataPla$Relapse2year)
x
pred.ben.avg<-(FinalDataNat$Benefit+FinalDataPla$Benefit)/2
obs.ben<-as.numeric(FinalDataNat$Relapse2year)-as.numeric(FinalDataPla$Relapse2year)
obs.ben
pred.ben.avg
pred.ben.avg<-as.data.frame((FinalDataNat$Benefit+FinalDataPla$Benefit)/2)
colnames(pred.ben.avg)<-c("AveragePredictedBenefit")
pred.ben.avg
obs.ben<-as.data.frame(as.numeric(FinalDataNat$Relapse2year)-as.numeric(FinalDataPla$Relapse2year)) # -1 , 0, or 1
obs.ben<-as.data.frame(as.numeric(FinalDataNat$Relapse2year)-as.numeric(FinalDataPla$Relapse2year)) # -1 , 0, or 1
colnames(obs.ben)<-c("ObservedBenefit")
x<-as.data.frame(x,pred.ben.avg,obs.ben)
nrow(x)
nrow(pred.ben.avg)
nrow(obs.ben)
x<-as.data.frame(x,pred.ben.avg,obs.ben)
x<-rbind(x,pred.ben.avg,obs.ben)
x<-cbind(x,pred.ben.avg,obs.ben)
x
x<-as.data.frame(cbind(x,pred.ben.avg,obs.ben))
View(x)
View(x)
(0.1921+0.1713)/2
pred.ben.avg<-as.data.frame((FinalDataNat$Benefit+FinalDataPla$Benefit)/2)
colnames(pred.ben.avg)<-c("AveragePredictedBenefit")
obs.ben<-as.data.frame(as.numeric(FinalDataPla$Relapse2year)-as.numeric(FinalDataNat$Relapse2year)) # -1 , 0, or 1
colnames(obs.ben)<-c("ObservedBenefit")
x<-as.data.frame(cbind(x,pred.ben.avg,obs.ben))
# Step 10. Calculate the c-for-benefit
cindex <- rcorr.cens(pred.ben.avg, obs.ben)
c.benefit <- cindex["C Index"][[1]]
# Step 10. Calculate the c-for-benefit
cindex <- rcorr.cens(pred.ben.avg, obs.ben)
length(pred.ben.avg)
length(obs.ben)
# Step 10. Calculate the c-for-benefit
cindex <- rcorr.cens(x$pred.ben.avg, x$obs.ben)
c.benefit <- cindex["C Index"][[1]]
c.benefit.se <- cindex["S.D."][[1]]/2	# The sd of the c-index is half the sd of Dxy
c.benefit
x$pred.ben.avg
pred.ben.avg<-as.data.frame((FinalDataNat$Benefit+FinalDataPla$Benefit)/2)
colnames(pred.ben.avg)<-c("AveragePredictedBenefit")
obs.ben<-as.data.frame(as.numeric(FinalDataPla$Relapse2year)-as.numeric(FinalDataNat$Relapse2year)) # -1 , 0, or 1
colnames(obs.ben)<-c("ObservedBenefit")
x<-as.data.frame(cbind(x,pred.ben.avg,obs.ben))
x
x$obs.ben
x
# Step 10. Calculate the c-for-benefit
cindex <- rcorr.cens(x$AveragePredictedBenefit, x$ObservedBenefit)
c.benefit <- cindex["C Index"][[1]]
c.benefit.se <- cindex["S.D."][[1]]/2	# The sd of the c-index is half the sd of Dxy
c.benefit
# [1] 0.4871		# The c-for-benefit
c.benefit - 1.96*c.benefit.se
# [1] 0.4460425		# The 95% lower bound of the c-for-benefit
c.benefit + 1.96*c.benefit.se
x$AveragePredictedBenefit
x$ObservedBenefit
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
install_github("htx-r/NMAPredictionsRiskModel", force = TRUE)
library(CleaningData)
library(R2jags)
library(glmpath)
library(readxl)
library(NMAPredictionsRiskModel)
library(glmnet)
library(Hmisc)
library(dplyr)
library(car)
library(gridExtra)
library(ggpubr)
library(rms)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/Real world predictions project/HTx/data cleaning"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
adsl01<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
adsl<-adsl01[adsl01$STUDYID!="SENTINEL" & adsl01$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
MSrelapse<-numericalDataRisk.fun(adsl)  ##final full dataset
names(MSrelapse)
source('EPVandSampleSize.R')
names(adsl01)
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
MSrelapse<-numericalDataRisk.fun(adsl)  ##final full dataset
#########################   END    #################################################################
rm(list=ls())
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
install_github("htx-r/NMAPredictionsRiskModel", force = TRUE)
library(NMAPredictionsRiskModel)
library(CleaningData)
library(R2jags)
library(dplyr)
library(glmpath)
library(readxl)
library(car)
library(glmnet)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
RCTs0<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
MSrelapse<-numericalDataRisk.fun(RCTs)  ##final full dataset
git clone https://github.com/htx-r/ATwoStagePredictionModelMultipleSclerosis
help(git clone)
help(git clone)
help(gitclone)
#########################   END    #################################################################
rm(list=ls())
modelIPDADNMA<-function(){
#############Part I: model for IPD data
for (i in 1:Np){
outcome[i]~dbern(p[i])
###formula
logit(p[i])<-u[studyid[i]] + d[studyid[i], arm[i]]
}
#####treatment effects - fixed across studies & correction for multi-arm studies
for(i in 1:N.IPD.studies){
d[i,1] <- 0
w[i,1] <- 0
for(k in 2:na[i]){
d[i,k]<-md[i, k]
md[i, k] <- mean[i, k] + sw[i, k]
w[i, k] <- (d[i, k] - mean[i, k])
sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
mean[i, k] <- delta[treat[i, k]] - delta[treat[i, 1]]
}
}
##Part II: Model for AD data
for(i in (N.IPD.studies+1):(N.AD.studies +N.IPD.studies)){
d[i,treat[i,1] ]<- 0
w[i,1] <- 0
### formula for study's reference
logit(pa[i, treat[i,1] ])<-u[i]
for (k in 1:na[i]){
##likelihood
outcome.ad[i,treat[i,k]]~dbin(pa[i,treat[i,k]], n[i,treat[i,k]])
}
for(k in 2:na[i]){
### formula - fixed across studies
logit(pa[i, treat[i,k] ])<-u[i] + d[i, treat[i,k]]
d[i, treat[i,k]]<-md.ad [i, treat[i,k]]
md.ad[i, treat[i,k]]<- mean[i, k] + sw[i, k]
w[i, k] <- (d[i, treat[i, k]] - mean[i, k])
sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
mean[i, k] <- delta[treat[i, k]] - delta[treat[i, 1]]
}
}
####PART III: Model for combining all treatment effect estimates
#Vague priors
##independent ui for each study
for (i in 1:(N.IPD.studies+N.AD.studies)){
u[i]~dnorm(0,0.001)
}
delta[ref]<-0
for(k in 1:(ref-1)){
delta[k]~dnorm(0,0.001)
}
for(k in (ref+1):nt){
delta[k]~dnorm(0,0.001)
}
###Calculation of ORs
for(j in 1:nt){ORref[j]<- exp(delta[j] - delta[ref])}
}
#### Aggregated data
MS <- read_excel("C:/Users/kc19o338/articles/TracemereADMS/MS replication/MS.xlsx")
MS <- as.data.frame(MS)
ADdata<-MS[which(MS$study=="Bornstein" | MS$study=="Johnson"),]
###load the needed libraries
library(devtools)
install_github("htx-r/CleaningData",force=TRUE)
install_github("htx-r/NMAPredictionsRiskModel", force = TRUE)
library(NMAPredictionsRiskModel)
library(CleaningData)
library(R2jags)
library(dplyr)
library(car)
library(glmpath)
library(glmnet)
library(readxl)
library(Hmisc)
library(rms)
library(gridExtra)
library(ggpubr)
library(ggplot2)
library(synthpop)
library(pmsampsize)
library(selectiveInference)
library(plyr)
library(vcd)
library(pROC)
library(DiagrammeR)
###### Give your path of data
mydatapath="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/data/IPD data from 6 Biogen trials"
mydatapath1="C:/Users/kc19o338/Desktop/RealWorldPredictionModel/HTx/Placebo Arms"
######## load data
###cleaning the data from BIOGEN, defined the outcomes in columns: RELAPSE02Year, RELAPSE01Year, names of Treatments and Drugs
cleanBIOGENtrials<-cleanBIOGENtrials.fun(mydatapath)
PlaceboArms<-cleanPLACEBOtrials.fun(mydatapath1)
RCTs0<-cleanBIOGENtrials$adsl01
###drop SENTTINEL STUDY because of combination of treatments and
### drop ADVANCE study because does not provide information for Relapse in 2 years (only for 1 year)
RCTs<-RCTs0[RCTs0$STUDYID!="SENTINEL" & RCTs0$STUDYID!="ADVANCE" ,]
### Select variables that I need- exclude variables with a huge ammount of missing values (more than 50%),
#exclude factors with just one category, exclude factors that are transformations from already existing variables)
#exclude highly correlated variables
###and recode them in numerical values (e.g. Male=1, Female=0)
## transformations of continuous variables to approximate normal distribution
MSrelapse<-numericalDataRisk.fun(RCTs)  ##final full dataset
######DATA
## arm column
RiskData$arm<-NA
RiskData$arm[RiskData$STUDYID==1 & RiskData$TRT01A==1]<-1
source('EPVandSampleSize.R')
######## Model 1 - results of LASSO model with LASSO shrinkage
LASSOModel<-RiskModels.fun(MSrelapse,"LASSOModel")
#########  Model 2 - Results of Pre-specified model using Penalized Maximum Likelihood Estimation for shrinkage
PreSpecifiedModel<-RiskModels.fun(MSrelapse,"PreSpecifiedModel")
#Step 4. Create a dataset that includes Risk's and logit Risk's predictions for each individual and for both models
##Also make treatment and studies numerical values
source("RiskData.R")
#Step 5. Source the script for the plots of risk score
source('Plots.R')
modelIPDADNMA<-function(){
#############Part I: model for IPD data
for (i in 1:Np){
outcome[i]~dbern(p[i])
###formula
logit(p[i])<-u[studyid[i]] + d[studyid[i], arm[i]]
}
#####treatment effects - fixed across studies & correction for multi-arm studies
for(i in 1:N.IPD.studies){
d[i,1] <- 0
w[i,1] <- 0
for(k in 2:na[i]){
d[i,k]<-md[i, k]
md[i, k] <- mean[i, k] + sw[i, k]
w[i, k] <- (d[i, k] - mean[i, k])
sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
mean[i, k] <- delta[treat[i, k]] - delta[treat[i, 1]]
}
}
##Part II: Model for AD data
for(i in (N.IPD.studies+1):(N.AD.studies +N.IPD.studies)){
d[i,treat[i,1] ]<- 0
w[i,1] <- 0
### formula for study's reference
logit(pa[i, treat[i,1] ])<-u[i]
for (k in 1:na[i]){
##likelihood
outcome.ad[i,treat[i,k]]~dbin(pa[i,treat[i,k]], n[i,treat[i,k]])
}
for(k in 2:na[i]){
### formula - fixed across studies
logit(pa[i, treat[i,k] ])<-u[i] + d[i, treat[i,k]]
d[i, treat[i,k]]<-md.ad [i, treat[i,k]]
md.ad[i, treat[i,k]]<- mean[i, k] + sw[i, k]
w[i, k] <- (d[i, treat[i, k]] - mean[i, k])
sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
mean[i, k] <- delta[treat[i, k]] - delta[treat[i, 1]]
}
}
####PART III: Model for combining all treatment effect estimates
#Vague priors
##independent ui for each study
for (i in 1:(N.IPD.studies+N.AD.studies)){
u[i]~dnorm(0,0.001)
}
delta[ref]<-0
for(k in 1:(ref-1)){
delta[k]~dnorm(0,0.001)
}
for(k in (ref+1):nt){
delta[k]~dnorm(0,0.001)
}
###Calculation of ORs
for(j in 1:nt){ORref[j]<- exp(delta[j] - delta[ref])}
}
#### Aggregated data
MS <- read_excel("C:/Users/kc19o338/articles/TracemereADMS/MS replication/MS.xlsx")
MS <- as.data.frame(MS)
ADdata<-MS[which(MS$study=="Bornstein" | MS$study=="Johnson"),]
######DATA
## arm column
RiskData$arm<-NA
RiskData$arm[RiskData$STUDYID==1 & RiskData$TRT01A==1]<-1
RiskData$arm[RiskData$STUDYID==1 & RiskData$TRT01A==4]<-2
RiskData$arm[RiskData$STUDYID==2 & RiskData$TRT01A==1]<-1
RiskData$arm[RiskData$STUDYID==2 & RiskData$TRT01A==2]<-2
RiskData$arm[RiskData$STUDYID==2 & RiskData$TRT01A==4]<-3
RiskData$arm[RiskData$STUDYID==3 & RiskData$TRT01A==3]<-1
RiskData$arm[RiskData$STUDYID==3 & RiskData$TRT01A==4]<-2
ADdata$treat[which(ADdata$treat=="Placebo")]<-4
ADdata$treat[which(ADdata$treat=="Glatiramer acetate")]<-2
ADdata$id<-c(4,4,5,5)
jagsdataIPDADnetmeta <- list(
N.IPD.studies=3,
Np=sum(as.numeric(table(as.numeric(as.factor(RiskData$STUDYID))))),
studyid=as.numeric(as.factor(RiskData$STUDYID)),
outcome=as.numeric(RiskData$RELAPSE2year)-1,
treat= rbind(c(1,4,NA),c(1,2,4),c(3,4,NA), c(2,4,NA),c(2,4,NA)),
na=c(2,3,2,2,2),
arm=RiskData$arm,
ref=4,
nt=4,
N.AD.studies=2,
outcome.ad=rbind(c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,11,NA,19),c(NA,89,NA,97)),
n=rbind(c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,25,NA,25),c(NA,125,NA,126)),
Risk=RiskData$logitRiskFabio
)
####RUN the model
IPDADnetmetaJAGSmodel <- jags.parallel(data = jagsdataIPDADnetmeta ,inits=NULL,parameters.to.save = c('delta','u','ORref'),model.file = modelIPDADNMA,
n.chains=2,n.iter = 10000,n.burnin = 100,DIC=F,n.thin = 1)
IPDADnetmetaJAGSmodel
jagsdataIPDADnetmeta <- list(
N.IPD.studies=3,
Np=sum(as.numeric(table(as.numeric(as.factor(RiskData$STUDYID))))),
studyid=as.numeric(as.factor(RiskData$STUDYID)),
outcome=as.numeric(RiskData$RELAPSE2year)-1,
treat= rbind(c(1,4,NA),c(1,2,4),c(3,4,NA), c(4,2,NA),c(4,2,NA)),
na=c(2,3,2,2,2),
arm=RiskData$arm,
ref=4,
nt=4,
N.AD.studies=2,
outcome.ad=rbind(c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,11,NA,19),c(NA,89,NA,97)),
n=rbind(c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,25,NA,25),c(NA,125,NA,126)),
Risk=RiskData$logitRiskFabio
)
####RUN the model
IPDADnetmetaJAGSmodel <- jags.parallel(data = jagsdataIPDADnetmeta ,inits=NULL,parameters.to.save = c('delta','u','ORref'),model.file = modelIPDADNMA,
n.chains=2,n.iter = 10000,n.burnin = 100,DIC=F,n.thin = 1)
IPDADnetmetaJAGSmodel
jagsdataIPDADnetmeta <- list(
N.IPD.studies=3,
Np=sum(as.numeric(table(as.numeric(as.factor(RiskData$STUDYID))))),
studyid=as.numeric(as.factor(RiskData$STUDYID)),
outcome=as.numeric(RiskData$RELAPSE2year)-1,
treat= rbind(c(1,4,NA),c(1,2,4),c(3,4,NA), c(2,4,NA),c(2,4,NA)),
na=c(2,3,2,2,2),
arm=RiskData$arm,
ref=4,
nt=4,
N.AD.studies=2,
outcome.ad=rbind(c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,11,NA,19),c(NA,89,NA,97)),
n=rbind(c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,NA,NA,NA),c(NA,25,NA,25),c(NA,125,NA,126)),
Risk=RiskData$logitRiskFabio
)
####RUN the model
IPDADnetmetaJAGSmodel <- jags.parallel(data = jagsdataIPDADnetmeta ,inits=NULL,parameters.to.save = c('delta','u','ORref'),model.file = modelIPDADNMA,
n.chains=2,n.iter = 10000,n.burnin = 100,DIC=F,n.thin = 1)
IPDADnetmetaJAGSmodel
29/25
19/25
log(0.76/(1-0.76))
97/126
table(RiskData$RLPS1YR(which(RiskData$STUDYID==1))
)
RiskData(which(RiskData$STUDYID==1))
RiskData[which(RiskData$STUDYID==1),]
93/172
log(0.54/(1-0.54))
#########################   END    #################################################################
rm(list=ls())
