tosplit2 <- as.numeric(str_extract(tosplit, "[0-9]+"))
nroftreatments = max(tosplit2)
location = matrix(tosplit2, ncol = 2, byrow = T)
CImatl= CImatu = matrix(NA, nrow = nroftreatments,
ncol = nroftreatments)
for (i in 1:nrow(location)) {
CImatl[location[i, 1], location[i, 2]] = resultstabletokeep[i,
1]
CImatu[location[i, 1], location[i, 2]] = resultstabletokeep[i,
2]
}
CImatl = round(CImatl, rounding)
CImatu = round(CImatu, rounding)
Ttreat = dim(CImatl)[1]
toprintmat = matrix(nrow = Ttreat, ncol = Ttreat)
for (i in 1:Ttreat ) {
for (j in 1:Ttreat) {
toprintmat[j, i] = paste("(",
CImatl[j,i], ", ", CImatu[j, i], ")")
}
}
if (!missing(treatnames)) {
diag(CImatl) = sort(unique(DATA$Drug_name))
diag(CImatu) = sort(unique(DATA$Drug_name))
diag(toprintmat) = sort(unique(DATA$Drug_name))
}
list(CIl = CImatl, CIu = CImatu, ORpred = toprintmat)
}
MDpreds=out.jagsNMA.results3(NMAinJAGSBinP,treatnames = sort(unique(DATA$Drug_name)),parameter="predMD",rounding=2,forestplot=F)
MDpred<-as.data.frame(MDpreds$ORpred)
MDpred[upper.tri(MDpred)]<-NA
library("xlsx")
lt= read_excel("C:/Users/kc19o338/Desktop/Johannes/SecondaryOutcomes/QTC/leaguetable_QTC_Bayesian.xlsx", na="99999")
View(lt)
View(lt)
View(MDpred)
View(MDpred)
write.xlsx(MDpred, "C:/Users/kc19o338/Desktop/Johannes/SecondaryOutcomes/QTC/MDpred_QTC.xlsx", sheetName = "MDpred_QTC")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
DATA1=read_excel("C:/Users/kc19o338/Desktop/Schizophrenia project/dataset_relapse.last.xlsx", na="99999")
DATA<-DATA1[!is.na(DATA1$SocialFunctioning_participants),]
DATA<-DATA[!is.na(DATA$SocialFunctioning_mean),]
DATA<-DATA[!is.na(DATA$SocialFunctioning_sd),]
excludeID <-c(4380)
DATA=DATA[!DATA$Final_ID_all%in%excludeID,]
cat("Because of disconnected network, the study",excludeID, " was also excluded")
NMAdataContinuous=make.jagsNMA.data(studyid=Final_ID_all,t=Drug_name,y=SocialFunctioning_mean, sd=SocialFunctioning_sd, n=SocialFunctioning_participants,data=DATA,type="cont",reference = "Placebo")
modelNMAContinuous2<-function ()
{
for (i in 1:ns) {
w[i, 1] <- 0
delta[i, t[i, 1]] <- 0
u[i] ~ dnorm(0, 1e-04)
for (k in 1:na[i]) {
y[i, t[i, k]] ~ dnorm(phi[i, t[i, k]], prec[i, t[i,
k]])
phi[i, t[i, k]] <- (u[i] + delta[i, t[i, k]]) * pooled.sd[i]
}
for (k in 2:na[i]) {
delta[i, t[i, k]] ~ dnorm(md[i, t[i, k]], taud[i,
t[i, k]])
md[i, t[i, k]] <- d[t[i, k]] - d[t[i, 1]] + sw[i,
k]
taud[i, t[i, k]] <- PREC * 2 * (k - 1)/k
w[i, k] <- (delta[i, t[i, k]] - d[t[i, k]] + d[t[i,
1]])
sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
}
}
d[ref] <- 0
for (k in 1:(ref - 1)) {
d[k] ~ dnorm(0, 1e-04)
}
for (k in (ref + 1):nt) {
d[k] ~ dnorm(0, 1e-04)
}
tau ~ dunif(0, 5)
PREC <- 1/pow(tau, 2)
for (c in 1:nt) {
for (k in 1:nt) {
SMD[c, k] <- d[k] - d[c]
}
}
for (c in 1:nt) {
SMD.ref[c] <- d[c] - d[ref]
}
for (c in 1:(ref - 1)) {
X[c] <- d[c] - d[ref]
predSMD.ref[c] ~ dnorm(X[c], PREC)
}
for (c in (ref + 1):nt) {
X[c] <- d[c] - d[ref]
predSMD.ref[c] ~ dnorm(X[c], PREC)
}
for (c in 1:nt) {
for (k in 1:nt) {
predSMD[c, k] ~ dnorm(SMD[c, k], PREC)
}
}
order[1:nt] <- rank(d[1:nt])
for (k in 1:nt) {
most.effective[k] <- equals(order[k], 1)
for (j in 1:nt) {
effectiveness[k, j] <- equals(order[k], j)
}
}
for (k in 1:nt) {
for (j in 1:nt) {
cumeffectiveness[k, j] <- sum(effectiveness[k, 1:j])
}
}
for (k in 1:nt) {
SUCRA[k] <- sum(cumeffectiveness[k, 1:(nt - 1)])/(nt -
1)
}
for (i in 1:ns) {
for (k in 1:na[i]) {
Darm[i, k] <- (y[i, t[i, k]] - phi[i, t[i, k]]) *
(y[i, t[i, k]] - phi[i, t[i, k]]) * prec[i, t[i,
k]]
}
D[i] <- sum(Darm[i, 1:na[i]])
}
D.bar <- sum(D[])
}
NMAinJAGSBinP <- jags.parallel(data = NMAdataContinuous, inits = NULL,
parameters.to.save = c("predSMD"), n.chains = 2, n.iter = 120000,
n.burnin = 10000,DIC=F,n.thin=10,
model.file = modelNMAContinuous2)
print(NMAinJAGSBinP)
print(NMAinJAGSBinP)
#for the prediction intervals
out.jagsNMA.results3<-function (JAGSobject, parameter = parameter, forestplot = F,
treatnames = NA, rounding = 2)
{
resultstable = JAGSobject$BUGSoutput$summary
allvariablenames = rownames(resultstable)
rowsmatching = substr(allvariablenames, 1, nchar(parameter))
rowstokeep = startsWith(rowsmatching, parameter)
resultstabletokeep = resultstable[rowstokeep, c(3, 7)]
rowstokeep2 = startsWith(dimnames(resultstabletokeep)[[1]],
paste(parameter, "[", sep = ""))
resultstabletokeep = resultstabletokeep[rowstokeep2, ]
library(stringr)
tosplit = unlist(strsplit(rownames(resultstabletokeep), ","))
tosplit2 <- as.numeric(str_extract(tosplit, "[0-9]+"))
nroftreatments = max(tosplit2)
location = matrix(tosplit2, ncol = 2, byrow = T)
CImatl= CImatu = matrix(NA, nrow = nroftreatments,
ncol = nroftreatments)
for (i in 1:nrow(location)) {
CImatl[location[i, 1], location[i, 2]] = resultstabletokeep[i,
1]
CImatu[location[i, 1], location[i, 2]] = resultstabletokeep[i,
2]
}
CImatl = round(CImatl, rounding)
CImatu = round(CImatu, rounding)
Ttreat = dim(CImatl)[1]
toprintmat = matrix(nrow = Ttreat, ncol = Ttreat)
for (i in 1:Ttreat ) {
for (j in 1:Ttreat) {
toprintmat[j, i] = paste("(",
CImatl[j,i], ", ", CImatu[j, i], ")")
}
}
if (!missing(treatnames)) {
diag(CImatl) = sort(unique(DATA$Drug_name))
diag(CImatu) = sort(unique(DATA$Drug_name))
diag(toprintmat) = sort(unique(DATA$Drug_name))
}
list(CIl = CImatl, CIu = CImatu, ORpred = toprintmat)
}
SMDpreds=out.jagsNMA.results3(NMAinJAGSBinP,treatnames = sort(unique(DATA$Drug_name)),parameter="predSMD",rounding=2,forestplot=F)
SMDpred<-as.data.frame(SMDpreds$ORpred)
SMDpred[upper.tri(SMDpred)]<-NA
lt= read_excel("C:/Users/kc19o338/Desktop/Johannes/SecondaryOutcomes/SocialFunctioning/leaguetable_SocialFunctioning_Bayesian.xlsx", na="99999")
View(lt)
View(lt)
View(SMDpred)
View(SMDpred)
write.xlsx(SMDpred, "C:/Users/kc19o338/Desktop/Johannes/SecondaryOutcomes/SocialFunctioning/SMDpred_SocialFunctioning.xlsx", sheetName = "SMDpred_SocialFunctioning")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
DATA1=read_excel("C:/Users/kc19o338/Desktop/Schizophrenia project/dataset_relapse.last.xlsx", na="99999")
DATAw<-DATA1[!is.na(DATA1$Weight_participants),]
DATAw<-DATAw[!is.na(DATAw$Weight_mean),]
DATAw<-DATAw[!is.na(DATAw$Weight_sd),]
NMAdataContinuous=make.jagsNMA.data(studyid=Final_ID_all,t=Drug_name,y=Weight_mean, sd=Weight_sd, n=Weight_participants,data=DATAw,type="cont",reference = "Placebo")
modelNMAContinuousMD<-function ()
{
for (i in 1:ns) {
w[i, 1] <- 0
delta[i, t[i, 1]] <- 0
u[i] ~ dnorm(0, 1e-04)
for (k in 1:na[i]) {
y[i, t[i, k]] ~ dnorm(phi[i, t[i, k]], prec[i, t[i,
k]])
phi[i, t[i, k]] <- (u[i] + delta[i, t[i, k]])
}
for (k in 2:na[i]) {
delta[i, t[i, k]] ~ dnorm(md[i, t[i, k]], taud[i,
t[i, k]])
md[i, t[i, k]] <- d[t[i, k]] - d[t[i, 1]] + sw[i,
k]
taud[i, t[i, k]] <- PREC * 2 * (k - 1)/k
w[i, k] <- (delta[i, t[i, k]] - d[t[i, k]] + d[t[i,
1]])
sw[i, k] <- sum(w[i, 1:(k - 1)])/(k - 1)
}
}
d[ref] <- 0
for (k in 1:(ref - 1)) {
d[k] ~ dnorm(0, 1e-04)
}
for (k in (ref + 1):nt) {
d[k] ~ dnorm(0, 1e-04)
}
tau ~ dunif(0, 5)
PREC <- 1/pow(tau, 2)
for (c in 1:nt) {
for (k in 1:nt) {
MD[c, k] <- d[k] - d[c]
}
}
for (c in 1:nt) {
MD.ref[c] <- d[c] - d[ref]
}
for (c in 1:(ref - 1)) {
X[c] <- d[c] - d[ref]
predMD.ref[c] ~ dnorm(X[c], PREC)
}
for (c in (ref + 1):nt) {
X[c] <- d[c] - d[ref]
predMD.ref[c] ~ dnorm(X[c], PREC)
}
for (c in 1:nt) {
for (k in 1:nt) {
predMD[c, k] ~ dnorm(MD[c, k], PREC)
}
}
order[1:nt] <- rank(d[1:nt])
for (k in 1:nt) {
most.effective[k] <- equals(order[k], 1)
for (j in 1:nt) {
effectiveness[k, j] <- equals(order[k], j)
}
}
for (k in 1:nt) {
for (j in 1:nt) {
cumeffectiveness[k, j] <- sum(effectiveness[k, 1:j])
}
}
for (k in 1:nt) {
SUCRA[k] <- sum(cumeffectiveness[k, 1:(nt - 1)])/(nt -
1)
}
for (i in 1:ns) {
for (k in 1:na[i]) {
Darm[i, k] <- (y[i, t[i, k]] - phi[i, t[i, k]]) *
(y[i, t[i, k]] - phi[i, t[i, k]]) * prec[i, t[i,
k]]
}
D[i] <- sum(Darm[i, 1:na[i]])
}
D.bar <- sum(D[])
}
NMAinJAGSBinP <- jags.parallel(data = NMAdataContinuous, inits = NULL,
parameters.to.save = c("predMD"), n.chains = 2, n.iter = 120000,
n.burnin = 10000,DIC=F,n.thin=10,
model.file = modelNMAContinuousMD)
print(NMAinJAGSBinP)
#for the prediction intervals
out.jagsNMA.results3<-function (JAGSobject, parameter = parameter, forestplot = F,
treatnames = NA, rounding = 2)
{
resultstable = JAGSobject$BUGSoutput$summary
allvariablenames = rownames(resultstable)
rowsmatching = substr(allvariablenames, 1, nchar(parameter))
rowstokeep = startsWith(rowsmatching, parameter)
resultstabletokeep = resultstable[rowstokeep, c(3, 7)]
rowstokeep2 = startsWith(dimnames(resultstabletokeep)[[1]],
paste(parameter, "[", sep = ""))
resultstabletokeep = resultstabletokeep[rowstokeep2, ]
library(stringr)
tosplit = unlist(strsplit(rownames(resultstabletokeep), ","))
tosplit2 <- as.numeric(str_extract(tosplit, "[0-9]+"))
nroftreatments = max(tosplit2)
location = matrix(tosplit2, ncol = 2, byrow = T)
CImatl= CImatu = matrix(NA, nrow = nroftreatments,
ncol = nroftreatments)
for (i in 1:nrow(location)) {
CImatl[location[i, 1], location[i, 2]] = resultstabletokeep[i,
1]
CImatu[location[i, 1], location[i, 2]] = resultstabletokeep[i,
2]
}
CImatl = round(CImatl, rounding)
CImatu = round(CImatu, rounding)
Ttreat = dim(CImatl)[1]
toprintmat = matrix(nrow = Ttreat, ncol = Ttreat)
for (i in 1:Ttreat ) {
for (j in 1:Ttreat) {
toprintmat[j, i] = paste("(",
CImatl[j,i], ", ", CImatu[j, i], ")")
}
}
if (!missing(treatnames)) {
diag(CImatl) = sort(unique(DATA$Drug_name))
diag(CImatu) = sort(unique(DATA$Drug_name))
diag(toprintmat) = sort(unique(DATA$Drug_name))
}
list(CIl = CImatl, CIu = CImatu, ORpred = toprintmat)
}
MDpreds=out.jagsNMA.results3(NMAinJAGSBinP,treatnames = sort(unique(DATA$Drug_name)),parameter="predMD",rounding=2,forestplot=F)
MDpreds=out.jagsNMA.results3(NMAinJAGSBinP,treatnames = sort(unique(DATAw$Drug_name)),parameter="predMD",rounding=2,forestplot=F)
MDpreds=out.jagsNMA.results3(NMAinJAGSBinP,treatnames = sort(unique(DATAw$Drug_name)),parameter="predMD",rounding=2,forestplot=F)
MDpreds=out.jagsNMA.results3(NMAinJAGSBinP,treatnames = sort(unique(DATAw$Drug_name)),parameter="predMD",rounding=2,forestplot=F)
#for the prediction intervals
out.jagsNMA.results3<-function (JAGSobject, parameter = parameter, forestplot = F,
treatnames = NA, rounding = 2)
{
resultstable = JAGSobject$BUGSoutput$summary
allvariablenames = rownames(resultstable)
rowsmatching = substr(allvariablenames, 1, nchar(parameter))
rowstokeep = startsWith(rowsmatching, parameter)
resultstabletokeep = resultstable[rowstokeep, c(3, 7)]
rowstokeep2 = startsWith(dimnames(resultstabletokeep)[[1]],
paste(parameter, "[", sep = ""))
resultstabletokeep = resultstabletokeep[rowstokeep2, ]
library(stringr)
tosplit = unlist(strsplit(rownames(resultstabletokeep), ","))
tosplit2 <- as.numeric(str_extract(tosplit, "[0-9]+"))
nroftreatments = max(tosplit2)
location = matrix(tosplit2, ncol = 2, byrow = T)
CImatl= CImatu = matrix(NA, nrow = nroftreatments,
ncol = nroftreatments)
for (i in 1:nrow(location)) {
CImatl[location[i, 1], location[i, 2]] = resultstabletokeep[i,
1]
CImatu[location[i, 1], location[i, 2]] = resultstabletokeep[i,
2]
}
CImatl = round(CImatl, rounding)
CImatu = round(CImatu, rounding)
Ttreat = dim(CImatl)[1]
toprintmat = matrix(nrow = Ttreat, ncol = Ttreat)
for (i in 1:Ttreat ) {
for (j in 1:Ttreat) {
toprintmat[j, i] = paste("(",
CImatl[j,i], ", ", CImatu[j, i], ")")
}
}
if (!missing(treatnames)) {
diag(CImatl) = treatnames
diag(CImatu) = treatnames
diag(toprintmat) = treatnames
}
list(CIl = CImatl, CIu = CImatu, ORpred = toprintmat)
}
MDpreds=out.jagsNMA.results3(NMAinJAGSBinP,treatnames = sort(unique(DATAw$Drug_name)),parameter="predMD",rounding=2,forestplot=F)
MDpred<-as.data.frame(MDpreds$ORpred)
MDpred[upper.tri(MDpred)]<-NA
View(MDpred)
View(MDpred)
lt= read_excel("C:/Users/kc19o338/Desktop/Johannes/SecondaryOutcomes/Weight/leaguetable_Weight_Bayesian.xlsx", na="99999")
View(lt)
View(lt)
write.xlsx(MDpred, "C:/Users/kc19o338/Desktop/Johannes/SecondaryOutcomes/Weight/MDpred_Weight.xlsx", sheetName = "MDpred_Weight")
library(devtools)
install_github("esm-ispm-unibe-ch/NMAJags")
library(NMAJags)
library(R2jags)
library(netmeta)
library(meta)
library(metafor)
library(readxl)
library(xlsx)
library(tidyverse)
library(WriteXLS)
DATA2=read_excel("C:/Users/kc19o338/Desktop/Schizophrenia project/dataset_relapse.last.xlsx", na="99999")
DATA1<-DATA2[!is.na(DATA2$N_relapsed),]
DATA<-DATA1[!is.na(DATA1$N_randomized),]
#excludeID <-c(985, 1226, 2997, 3131, 3305, 4114, 4362, 4398, 4410, 4412, 4447, 4519, 4584, 4650)
#cat("The following IDs are excluded because of missing number of relapses:",paste("ID=", excludeID))
#DATA=DATA[!DATA$Final_ID_all%in%excludeID,]
#describe the data
tapply(DATA$N_randomized,DATA$Drug_name,sum,na.rm=T)
print(length(table(DATA$Study_name)))
#prepare the data
DATApairs=pairwise(treat=Drug_name, event=N_relapsed, n=N_randomized, data=DATA, sm="OR", studlab=Final_ID_all, allstudies = TRUE)
#run NMA and create an object called EFF for efficacy
net1<-netmeta(TE, seTE, treat1, treat2, studlab, data = DATApairs, sm = "OR", comb.random=TRUE, comb.fixed=FALSE, prediction=TRUE, ref="Placebo")
#network plot
netgraph(net1, plastic=F, thickness="number.of.studies", multiarm = F, points=T, col=1)
#Contour-Enhanced Funnel plot
library(meta)
#Contour-Enhanced Funnel plot
ma <- metabin(event1,n1,event2,n2, subset = net1$treat1==rownames(t)[i] & net1$treat2==colnames(t)[j], data=net1$data)
#Contour-Enhanced Funnel plot
ma <- metabin(event1,n1,event2,n2, subset = net1$treat1==rownames(t) & net1$treat2==colnames(t), data=net1$data)
rownames(t)
#Contour-Enhanced Funnel plot
ma <- metabin(event1,n1,event2,n2, subset = net1$treat1==rownames & net1$treat2==colnames, data=net1$data)
help("metabin")
#Contour-Enhanced Funnel plot
ma <- metabin(event1,n1,event2,n2, subset = net1$treat1=="Placebo" & net1$treat2!="Placebo", data=net1$data)
View(ma)
View(ma)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue",
)
help("metabin")
#Contour-Enhanced Funnel plot
ma <- metabin(event1,n1,event2,n2, subset = net1$treat1!="Placebo" & net1$treat2=="Placebo", data=net1$data, sm="OR")
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue",
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "effect reported as Placebo over Active Treatment"))
#Contour-Enhanced Funnel plot
ma <- metabin(event1,n1,event2,n2, subset = net1$treat1!="Placebo" & net1$treat2=="Placebo", data=net1$data, sm="OR")
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue",
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
help(funnel)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend(0.05, 0.05,
c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"),
fill=c("darkred", "red", "lightcoral"))
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend(0.05, 0.05,
c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"),
fill=c("darkred", "red", "lightcoral"), fill=cc)
help(legend)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend(0.05, 0.05,
c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"),
fill=c("darkred", "red", "lightcoral"))
data(Olkin95)
DATApairs=pairwise(treat=Drug_name, event=N_relapsed, n=N_randomized, data=DATA, sm="OR", studlab=Final_ID_all, allstudies = TRUE)
meta1 <- metabin(event1, n1, event2, n2,
data=DATApairs,
studlab=Final_ID_all,
sm="OR", method="I")
##
## Contour-enhanced funnel plot with user-chosen colours
##
funnel(meta1, comb.fixed=TRUE,
level=0.95, contour=c(0.9, 0.95, 0.99),
col.contour=c("darkgreen", "green", "lightgreen"),
lwd=2, cex=2, pch=16, studlab=TRUE, cex.studlab=1.25)
legend(0.05, 0.05,
c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"),
fill=c("darkgreen", "green", "lightgreen"))
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
#Contour-Enhanced Funnel plot
ma <- metabin(event1,n1,event2,n2, subset = net1$treat1!="Placebo" & net1$treat2=="Placebo", data=net1$data, sm="OR")
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend(4.00, 0.05,
c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"),
fill=c("darkred", "red", "lightcoral"))
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
llegend("bottomleft", c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("darkred", "red", "lightcoral"), cex=1.5)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend("bottomleft", c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("darkred", "red", "lightcoral"), cex=1.5)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend("bottomleft", c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("darkred", "red", "lightcoral"), cex=2)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend("bottomleft", c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("darkred", "red", "lightcoral"), cex=1.2)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend("bottomright", c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("darkred", "red", "lightcoral"), cex=1.2)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend(2.00,0.05, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("darkred", "red", "lightcoral"), cex=1.2)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend(1.00,0.05, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("darkred", "red", "lightcoral"), cex=1.2)
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend(1.00,0.05, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("darkred", "red", "lightcoral"), cex=0.8)
#Contour-Enhanced Funnel plot
ma <- metabin(event1,n1,event2,n2, subset = net1$treat1!="Placebo" & net1$treat2=="Placebo", data=net1$data, sm="OR")
funnel(ma, contour = c(0.9, 0.95, 0.99), col.contour = c("darkred", "red", "lightcoral"), cex=1.5, col="darkblue", comb.fixed = F,
bg="blue", cex.lab=1.2, xlab = paste(ma$sm, "Effect reported as Active Treatment over Placebo"))
legend(1.00,0.05, c("0.1 > p > 0.05", "0.05 > p > 0.01", "< 0.01"), fill = c("darkred", "red", "lightcoral"), cex=0.8)
